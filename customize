#!/usr/bin/bash

set -o errexit

locale-gen en_US.utf8

export LC_ALL=en_US.utf8
export LANGUAGE=en_US.utf8
export LANG=en_US.utf8

DENDRITE_VERSION="0.13.6"
PGSQL_VERSION="16"

# Get shasums from: https://go.dev/dl/
GO_VERSION="1.21.7"
GO_SHASUM="13b76a9b2a26823e53062fa841b07087d48ae2ef2936445dc34c4ae03293702c"

PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin

echo "* Remove apt-get workaround"
rm /usr/local/bin/apt-get || true

echo "* Get latest"
/usr/local/bin/uptodate

echo "* Setup nginx"
mkdir -p /etc/nginx/ssl
chmod 0500 /etc/nginx/ssl
/usr/local/bin/ssl-selfsigned.sh -d /etc/nginx/ssl -f nginx
mv /usr/local/var/tmp/nginx_service /usr/lib/systemd/system/nginx.service
cp /usr/local/var/tmp/nginx.conf /etc/nginx/nginx.conf
ln -s /etc/nginx/sites-available/dendrite /etc/nginx/sites-enabled/dendrite
systemctl daemon-reload

echo "* Add postgresql repository to apt sources"
wget -O /usr/share/keyrings/postgresql.asc https://www.postgresql.org/media/keys/ACCC4CF8.asc
echo "deb [signed-by=/usr/share/keyrings/postgresql.asc] http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/postgresql.list

echo "* Install postgres"
apt-get update
apt-get install -y postgresql postgresql-contrib

echo "* Fetch go"
curl -LOs https://go.dev/dl/go${GO_VERSION}.linux-amd64.tar.gz
if ! echo -n "${GO_SHASUM}  ./go${GO_VERSION}.linux-amd64.tar.gz" | shasum --check -a 256 -; then
  echo "* ERROR: exiting, wrong shasum of go file"
  exit 1
fi

echo "* Install go"
tar -C /usr/local -xvf go${GO_VERSION}.linux-amd64.tar.gz
export PATH=$PATH:/usr/local/go/bin

echo "* Setup postgresql"
sed -i 's/local   all             all                                     password/local   all             all                                     peer/' \
  /etc/postgresql/${PGSQL_VERSION}/main/pg_hba.conf
sed -i "s/#listen_addresses = 'localhost'/listen_addresses = 'localhost'/" \
  /etc/postgresql/${PGSQL_VERSION}/main/postgresql.conf

echo "* Fix postgresql for lx-branch"
sed -i -e "s|PIDFile=|#PIDFile=|" /lib/systemd/system/postgresql@.service
systemctl daemon-reload

echo "* Create dendrite user and group"
addgroup dendrite
adduser --disabled-password --system --quiet --home /home/dendrite --shell /usr/bin/bash dendrite
adduser dendrite dendrite
mkdir -p /home/dendrite
chown -R dendrite:dendrite /home/dendrite
mkdir /var/log/dentrite/
chown -R dendrite:dendrite /var/log/dentrite/

echo "* Build dendrite"
git clone https://github.com/matrix-org/dendrite.git
cd dendrite
git pull --tags
git checkout "v${DENDRITE_VERSION}"
go build -o bin/ ./cmd/...
mv bin/* /usr/local/bin/
mv dendrite-sample.yaml /etc/dendrite.yaml
generate-keys --private-key /etc/matrix_key.pem
chown dendrite /etc/matrix_key.pem

echo "* Install systemd file"
mv /usr/local/var/tmp/dendrite_service /etc/systemd/system/dendrite.service
systemctl daemon-reload

echo "* Disable ssh"
systemctl stop ssh
systemctl disable ssh

echo "* Create bash-history"
cat >> /root/.bash_history << EOF
systemctl edit --full dendrite
systemctl daemon-reload
systemctl reset-failed dendrite
systemctl stop dendrite
systemctl start dendrite
systemctl reload nginx
journalctl --since $(date '+%Y-%m-%d')
journalctl -fu dendrite
EOF

echo "* Ensure bootstrap will run next time"
rm -rf /var/lib/bootstrap

echo "* Cleaning up."
rm -rf /usr/local/var/tmp/*
rm -rf /root/dendrite
rm -rf /root/go
rm -rf /usr/local/go
apt-get -y remove g++ git-core file pkg-config gcc autoconf build-essential
apt-get -y autoremove || true
rm /var/log/syslog || true
touch /var/log/syslog || true
rm /root/customize
history -c
